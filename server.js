const express = require('express');
const socketio = require('socket.io');
const http = require('http');
const path = require('path');

const app = express();
const server = http.createServer(app);
const io = socketio(server);

// ‚úÖ 1. –†–∞–∑–¥–∞—ë–º —Å—Ç–∞—Ç–∏–∫—É –∏–∑ –ø–∞–ø–∫–∏ public
app.use(express.static(path.join(__dirname, 'public')));

// ‚úÖ 2. –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è "/"—Å–≤
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// ‚úÖ 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Socket.io
io.on('connection', (socket) => {
  console.log('–ù–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ!');
  
  socket.on('join', (username) => {
    socket.username = username;
    socket.broadcast.emit('message', {
      user: '–°–∏—Å—Ç–µ–º–∞',
      text: `${username} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É`
    });
  });

  socket.on('sendMessage', (messageData) => {
    io.emit('message', {
      user: socket.username,
      text: messageData.text,
      replyTo: messageData.replyTo
    });
  });

  socket.on('disconnect', () => {
    if (socket.username) {
      io.emit('message', {
        user: '–°–∏—Å—Ç–µ–º–∞',
        text: `${socket.username} –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç`
      });
    }
  });
});

// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
server.listen(PORT, () => console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`));